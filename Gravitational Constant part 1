import pygame
import sys
import math as M

WW, WH = 1500, 900
BG = 0, 0, 0
window = pygame.display.set_mode((WW, WH))
pygame.display.set_caption("Physics")
clock = pygame.time.Clock()

#Earth Gravity
EG = 9.8

#Gravitational constant
G = 1
#Formula
#F = G * ((mass1 * mass2) / r^2)
#D = _/(x1 - x2)^2 + (y1 - y2)^2

class Object_1:
    def __init__(self, mass1, x1, y1, radius1, mass2, x2, y2, radius2):
        #Object 1
        self.m1 = mass1 #MASS
        self.x1 = x1 #X POSITION
        self.y1 = y1 #Y POSITION
        self.r1 = radius1 #OBJECT RADIUS
        self.dy1 = 0 #DISPLACEMENT Y
        self.dx1 = 0 #DISPLACEMENT X
        self.fx1 = 0 #FORCE X
        self.fy1 = 0 #FORCE Y

        #Object 2
        self.m2 = mass2 #MASS
        self.x2 = x2 #X POSITION
        self.y2 = y2 #Y POSITION
        self.r2 = radius2 #OBJECT RADIUS
        self.dy2 = 0 #DISPLACEMENT Y
        self.dx2 = 0 #DISPLACEMENT X
        self.fx2 = 0 #FORCE X
        self.fy2 = 0 #FORCE Y

    def Maths(self):
        #Calculate the Distance
        D = M.sqrt(M.pow(self.x1 - self.x2, 2) + M.pow(self.y1 - self.y2, 2))

        #Calculate the G Force
        F = G * ((self.m1 * self.m2) / D)

        #Calculate the Acceleration
        Acc1 = F / self.m1
        Acc2 = F / self.m2

        #Calculate the direction of the force
        dx = self.x2 - self.x1
        dy = self.y2 - self.y1
        angle = M.atan2(dy, dx)

        #Decompose the forces into x and y components for both objects
        self.fx1 = Acc1 * M.cos(angle)
        self.fy1 = Acc1 * M.sin(angle)

        self.fx2 = -Acc2 * M.cos(angle)
        self.fy2 = -Acc2 * M.sin(angle)

    #Applies the force
    def apply_force(self):
        self.dx1 += self.fx1
        self.dy1 += self.fy1

        self.dx2 += self.fx2
        self.dy2 += self.fy2

    # Updates the position
    def update_position(self):
        self.x1 += self.dx1
        self.y1 += self.dy1

        self.x2 += self.dx2
        self.y2 += self.dy2

    def object1(self):
        pygame.draw.circle(window, (255, 0, 0), (self.x1, int(self.y1)), self.r1, 100)

    def object2(self):
        pygame.draw.circle(window, (0, 0, 255), (self.x2, int(self.y2)), self.r2, 100)

    def update(self):
        self.object1()
        self.object2()
        self.Maths()
        self.apply_force()
        self.update_position()

    def draw_object(self):
        self.update()

O1 = Object_1(100, 200, 250, 100, 100, 1300, 250, 100)

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()


    window.fill(BG)
    O1.draw_object()
    clock.tick(60)
    pygame.display.update()
